#!/bin/bash
##
## format-usb
## ----------
## Quickly create an msdos partition table and a single, formatted partition
## on a given USB flash drive so that it is compatible with Microsoft Windows.
##
## Usage:
##
##         format-usb [device] [optional partition label] [optional fs type]
##
## You must provide a label if specifying the filesystem type.
##
## Accepted filesystem flags:
##
##         --ntfs
##         --exfat
##         --none
##
## Additional options:
##
##         --zero   : Completely overwrite the device with zero's before
##                    formatting
##

if [ "$1" == "" ] || [ "$1" == "-h" ] || [ "$1" == "--help" ] ; then
  grep -E '^##[^#]?' "$0" | sed -E 's/## ?//g'
  if [ "$1" == "" ] ; then
    echo
    echo "Available devices:"
    fdisk -l | grep -E '/dev/sd[a-z][^0-9]'
    echo
  fi
  exit
fi

DEVICE=$1
LABEL=$2

echo "DEVICE=$DEVICE"
echo "LABEL=$LABEL"

if [ "$(echo \"$*\" | grep '\--ntfs')" != "" ] ; then
    FS=--ntfs
elif [ "$(echo \"$*\" | grep '\--exfat')" != "" ] ; then
    FS=--exfat
    if [ "$(which mkfs.exfat)" == "" ] ; then
        echo "Could not find mkfs.exfat"
        echo "Make sure these packages are installed: exfat-utils exfat-fuse"
        exit
    fi 
elif [ "$(echo \"$*\" | grep '\--none')" != "" ] ; then
    FS=--none
else
    FS=--fat
fi

#read -p 1

# Unmount current partitions
for d in $(mount | grep "$1" | cut -d ' ' -f 1); do 
  echo $d
  umount -f $d || exit
done

# Zero the device if desired
if [ "$(echo \"$*\" | grep '\--zero')" != "" ] ; then
    echo "Overwriting $DEVICE with zeros... (This may take a while)"
    dd if=/dev/zero of=$DEVICE bs=512k
    echo 'OK!'
fi

# Overwrite the first 10 MB of the device
dd if=/dev/zero of=$DEVICE bs=1M count=10
echo Please wait...

# Overwrite the last 10 MB of the device
DEVSIZE=$( fdisk -l | grep "$DEVICE" | grep Disk | grep -iEo '[0-9]+ bytes' | cut -d ' ' -f 1 )
SEEKTO=$(expr $DEVSIZE - 10485760)
#dd if=/dev/zero of=$DEVICE seek=$SEEKTO status=progress oflag=seek_bytes bs=512k
dd if=/dev/zero of=$DEVICE seek=$SEEKTO oflag=seek_bytes bs=512k
echo Please wait...

partprobe >/dev/null 2>/dev/null


#read -p a

# Wipe out any existing GPT
#cat <<EOF | gdisk $DEVICE
#x
#z
#y
#y
#EOF
#echo Please wait...

partprobe >/dev/null 2>/dev/null

#read -p b

# Create the new partition table
echo parted $DEVICE mktable msdos yes
#parted $DEVICE mktable msdos yes
cat <<EOF | parted $DEVICE
mktable
msdos
quit
EOF
echo Please wait...

partprobe >/dev/null 2>/dev/null

if [ "$FS" == "--none" ]; then
    eject $DEVICE && echo "$DEVICE Ejected"'!' && echo "Please remove the flash drive now."
    exit
fi

#read -p 2

echo $FS
# Create a single primary partition
if [ "$FS" == "--ntfs" ] || [ "$FS" == "--exfat" ] ; then
    # NTFS/EXFAT
    FSTYPE=7
else
    # FAT32
    FSTYPE=0b
fi
cat <<EOF | fdisk $DEVICE
n
p
1


a
1
t
$FSTYPE
w
EOF
echo Please wait...
partprobe >/dev/null 2>/dev/null

#read -p 3

# Unmount current partitions again (in case some idiotic thing automounts them)
for d in $(mount | grep "$1" | cut -d ' ' -f 1); do 
  echo $d
  umount -f $d
done


# Format the partition and apply provided label
if [ "$FS" == "--ntfs" ] ; then
    # NTFS
    if [ "$LABEL" != "" ] ; then
        mkfs.ntfs -L "$LABEL" -Q $DEVICE"1"
    else
        mkfs.ntfs -Q $DEVICE"1"
    fi
elif [ "$FS" == "--exfat" ] ; then
    # exfat
    if [ "$LABEL" != "" ] ; then
        mkfs.exfat -n "$LABEL" $DEVICE"1"
    else
        mkfs.exfat $DEVICE"1"
    fi
else
    # VFAT
    if [ "$LABEL" != "" ] ; then
        mkfs.vfat -n "$LABEL" $DEVICE"1"
    else
        mkfs.vfat $DEVICE"1"
    fi
fi
echo Please wait...
sync
partprobe >/dev/null 2>/dev/null

# Check filesystem for errors
fsck $DEVICE'1'
echo Please wait...

echo 'Done! :D'

#eject $DEVICE && echo "$DEVICE Ejected"'!' && echo "Please remove the flash drive now."
